/* Based on Andy Bell, https://github.com/Andy-set-studio/personal-site-eleventy */

.prose {
  --stack-space: var(--space-m-l);
  --wrapper-width: 64rem;
  & > * {
    position: relative;
    z-index: 1;
  }
  & > .dropcap {
    position: relative;
    z-index: 1;
    &::first-letter {
      position: relative;
      float: left;
      font-size: 120px;
      line-height: 1em;
      padding-right: var(--space-xs);
      color: var(--primary-color);
      z-index: 1;
    }
    &::before {
      content: attr(data-letter);
      position: absolute;
      top: 0;
      left: 0;
      font-size: 400px;
      line-height: 1em;
      line-height: 1;
      color: var(--secondary-color-50-alpha);
      z-index: -1;
      pointer-events: none;
      transform: translate(-25%, -5%);
      @media (max-width: 768px) {
          display: none;
      }
    }
  }
}


.prose :where(pre, pre + *, figure, figure + *) {
  --stack-space: var(--space-m-l);
}

.prose figcaption {
  font-size: var(--size-min-1);
  text-align: center;
  padding-block-end: var(--space-xs);
  margin-block-end: var(--space-s);
  border-bottom: 1px solid var(--color-bg-accent);
}

:where(.prose :is(h2, h3, h4)) {
  --stack-space: var(--space-xl);
}

:where(.prose :is(h2 + *, h3 + *, h4 + *):not(figure)) {
  --stack-space: var(--space-m);
}

.prose .heading-anchor:is(:hover, :focus) {
  text-decoration: none;
}

.heading-anchor {
  text-decoration: none;
}

.prose mark {
  background-color: var(--color-tertiary);
  color: var(--color-base-dark);
}

/* block space only for "regular lists" */
.prose :not(.cluster):not(.grid) > li + li {
  padding-block-start: var(--space-3xs);
}

/* inline space only for "regular lists" */
.prose :where(ul:not(.grid), ol:not(.grid)) {
  padding-inline-start: 1.2ch;
}

/* marker only for "regular lists" */
.prose :where(ul:not(.grid):not([role='list'])) li::marker {
  color: var(--color-primary);
  content: '– ';
}

.prose ol li::marker {
  color: var(--color-primary);
}

.prose img {
  border-radius: var(--border-radius);
}

.prose p a {
  text-decoration: underline;
  text-decoration-thickness: 0.14em;
  text-decoration-color: var(--base-color-10-tint);
  text-decoration-skip-ink: none;
  transition: text-decoration-thickness 0.2s ease-in-out;
  /* @seidgy: eu queria fazer a transition desse text-decoration-thickness, mas não consegui */
  
}

.prose p a:hover {
  text-decoration: underline;
  text-decoration-thickness: 1em;
  text-underline-offset: -.85em;
  text-decoration-color: var(--base-color-10-tint);
}

.prose strong {
  font-weight: 700;
  color: var(--primary-color);
}

.prose blockquote {
  padding-inline-start: 0;
  padding-block-end: var(--space-s);
  
  p {
    font-size: var(--size-1);
    font-weight: 600;
    font-family: var(--font-decorative);
    color: var(--primary-color);
    border-left: 8px solid var(--primary-color);
    padding-inline-start: var(--space-s);
    strong {
      background-color: var(--primary-color-15-alpha);
    }
  }
}

@media screen(ltsm) {
  .prose > *,
  .prose a {
    overflow-wrap: break-word;
    word-wrap: break-word;
    word-break: break-word;
    /* Adds a hyphen where the word breaks, if supported (No Blink) */
    hyphens: auto;
  }
}

.brow {
  font-family: var(--font-brow);
  font-variation-settings: 'wght' var(--font-weight-bold);
  font-feature-settings: 'salt' 1;
}

.region {
  padding-block-start: var(--region-space-top, var(--space-l-xl));
  padding-block-end: var(--region-space-bottom, var(--space-l-xl));
}